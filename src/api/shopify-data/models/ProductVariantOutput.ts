/* tslint:disable */
/* eslint-disable */
/**
 * fit-shopify-data API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProductVariantOutput
 */
export interface ProductVariantOutput {
    /**
     * 
     * @type {number}
     * @memberof ProductVariantOutput
     */
    shopifyId: number;
    /**
     * 
     * @type {string}
     * @memberof ProductVariantOutput
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProductVariantOutput
     */
    sku: string;
    /**
     * 
     * @type {number}
     * @memberof ProductVariantOutput
     */
    inventoryQuantity: number;
    /**
     * 
     * @type {number}
     * @memberof ProductVariantOutput
     */
    weight: number;
    /**
     * 
     * @type {number}
     * @memberof ProductVariantOutput
     */
    price: number;
    /**
     * 
     * @type {number}
     * @memberof ProductVariantOutput
     */
    compareAtPrice?: number | null;
    /**
     * 
     * @type {Date}
     * @memberof ProductVariantOutput
     */
    createdDateTime: Date;
    /**
     * 
     * @type {Date}
     * @memberof ProductVariantOutput
     */
    updatedDateTime: Date;
}

/**
 * Check if a given object implements the ProductVariantOutput interface.
 */
export function instanceOfProductVariantOutput(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "shopifyId" in value;
    isInstance = isInstance && "sku" in value;
    isInstance = isInstance && "inventoryQuantity" in value;
    isInstance = isInstance && "weight" in value;
    isInstance = isInstance && "price" in value;
    isInstance = isInstance && "createdDateTime" in value;
    isInstance = isInstance && "updatedDateTime" in value;

    return isInstance;
}

export function ProductVariantOutputFromJSON(json: any): ProductVariantOutput {
    return ProductVariantOutputFromJSONTyped(json, false);
}

export function ProductVariantOutputFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductVariantOutput {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'shopifyId': json['shopify_id'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'sku': json['sku'],
        'inventoryQuantity': json['inventory_quantity'],
        'weight': json['weight'],
        'price': json['price'],
        'compareAtPrice': !exists(json, 'compare_at_price') ? undefined : json['compare_at_price'],
        'createdDateTime': json['created_date_time'],
        'updatedDateTime': json['updated_date_time'],
    };
}

export function ProductVariantOutputToJSON(value?: ProductVariantOutput | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'shopify_id': value.shopifyId,
        'title': value.title,
        'sku': value.sku,
        'inventory_quantity': value.inventoryQuantity,
        'weight': value.weight,
        'price': value.price,
        'compare_at_price': value.compareAtPrice,
        'created_date_time': value.createdDateTime,
        'updated_date_time': value.updatedDateTime,
    };
}

