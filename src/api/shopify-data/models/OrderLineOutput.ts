/* tslint:disable */
/* eslint-disable */
/**
 * fit-shopify-data API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RestockType } from './RestockType';
import {
    RestockTypeFromJSON,
    RestockTypeFromJSONTyped,
    RestockTypeToJSON,
} from './RestockType';

/**
 * 
 * @export
 * @interface OrderLineOutput
 */
export interface OrderLineOutput {
    /**
     * 
     * @type {number}
     * @memberof OrderLineOutput
     */
    shopifyId: number;
    /**
     * 
     * @type {string}
     * @memberof OrderLineOutput
     */
    sku: string;
    /**
     * 
     * @type {string}
     * @memberof OrderLineOutput
     */
    title: string;
    /**
     * 
     * @type {number}
     * @memberof OrderLineOutput
     */
    productId: number;
    /**
     * 
     * @type {number}
     * @memberof OrderLineOutput
     */
    variantId: number;
    /**
     * 
     * @type {string}
     * @memberof OrderLineOutput
     */
    variantTitle?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof OrderLineOutput
     */
    refunded: boolean;
    /**
     * 
     * @type {RestockType}
     * @memberof OrderLineOutput
     */
    restockType: RestockType;
    /**
     * 
     * @type {number}
     * @memberof OrderLineOutput
     */
    quantity: number;
    /**
     * 
     * @type {number}
     * @memberof OrderLineOutput
     */
    price: number;
    /**
     * 
     * @type {number}
     * @memberof OrderLineOutput
     */
    totalDiscount: number;
    /**
     * 
     * @type {number}
     * @memberof OrderLineOutput
     */
    totalTax: number;
    /**
     * 
     * @type {number}
     * @memberof OrderLineOutput
     */
    totalPrice: number;
}

/**
 * Check if a given object implements the OrderLineOutput interface.
 */
export function instanceOfOrderLineOutput(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "shopifyId" in value;
    isInstance = isInstance && "sku" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "productId" in value;
    isInstance = isInstance && "variantId" in value;
    isInstance = isInstance && "refunded" in value;
    isInstance = isInstance && "restockType" in value;
    isInstance = isInstance && "quantity" in value;
    isInstance = isInstance && "price" in value;
    isInstance = isInstance && "totalDiscount" in value;
    isInstance = isInstance && "totalTax" in value;
    isInstance = isInstance && "totalPrice" in value;

    return isInstance;
}

export function OrderLineOutputFromJSON(json: any): OrderLineOutput {
    return OrderLineOutputFromJSONTyped(json, false);
}

export function OrderLineOutputFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderLineOutput {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'shopifyId': json['shopify_id'],
        'sku': json['sku'],
        'title': json['title'],
        'productId': json['product_id'],
        'variantId': json['variant_id'],
        'variantTitle': !exists(json, 'variant_title') ? undefined : json['variant_title'],
        'refunded': json['refunded'],
        'restockType': RestockTypeFromJSON(json['restock_type']),
        'quantity': json['quantity'],
        'price': json['price'],
        'totalDiscount': json['total_discount'],
        'totalTax': json['total_tax'],
        'totalPrice': json['total_price'],
    };
}

export function OrderLineOutputToJSON(value?: OrderLineOutput | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'shopify_id': value.shopifyId,
        'sku': value.sku,
        'title': value.title,
        'product_id': value.productId,
        'variant_id': value.variantId,
        'variant_title': value.variantTitle,
        'refunded': value.refunded,
        'restock_type': RestockTypeToJSON(value.restockType),
        'quantity': value.quantity,
        'price': value.price,
        'total_discount': value.totalDiscount,
        'total_tax': value.totalTax,
        'total_price': value.totalPrice,
    };
}

