/* tslint:disable */
/* eslint-disable */
/**
 * fit-shopify-data API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProductImageInput } from './ProductImageInput';
import {
    ProductImageInputFromJSON,
    ProductImageInputFromJSONTyped,
    ProductImageInputToJSON,
} from './ProductImageInput';
import type { ProductStatusInput } from './ProductStatusInput';
import {
    ProductStatusInputFromJSON,
    ProductStatusInputFromJSONTyped,
    ProductStatusInputToJSON,
} from './ProductStatusInput';
import type { ProductVariantInput } from './ProductVariantInput';
import {
    ProductVariantInputFromJSON,
    ProductVariantInputFromJSONTyped,
    ProductVariantInputToJSON,
} from './ProductVariantInput';

/**
 * 
 * @export
 * @interface ProductInput
 */
export interface ProductInput {
    /**
     * 
     * @type {number}
     * @memberof ProductInput
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof ProductInput
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof ProductInput
     */
    handle: string;
    /**
     * 
     * @type {string}
     * @memberof ProductInput
     */
    vendor?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProductInput
     */
    productType?: string | null;
    /**
     * 
     * @type {ProductStatusInput}
     * @memberof ProductInput
     */
    status: ProductStatusInput;
    /**
     * 
     * @type {Date}
     * @memberof ProductInput
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof ProductInput
     */
    updatedAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof ProductInput
     */
    publishedAt?: Date | null;
    /**
     * 
     * @type {Array<ProductImageInput>}
     * @memberof ProductInput
     */
    images: Array<ProductImageInput>;
    /**
     * 
     * @type {string}
     * @memberof ProductInput
     */
    tags: string;
    /**
     * 
     * @type {Array<ProductVariantInput>}
     * @memberof ProductInput
     */
    variants: Array<ProductVariantInput>;
}

/**
 * Check if a given object implements the ProductInput interface.
 */
export function instanceOfProductInput(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "handle" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "images" in value;
    isInstance = isInstance && "tags" in value;
    isInstance = isInstance && "variants" in value;

    return isInstance;
}

export function ProductInputFromJSON(json: any): ProductInput {
    return ProductInputFromJSONTyped(json, false);
}

export function ProductInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductInput {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'handle': json['handle'],
        'vendor': !exists(json, 'vendor') ? undefined : json['vendor'],
        'productType': !exists(json, 'product_type') ? undefined : json['product_type'],
        'status': ProductStatusInputFromJSON(json['status']),
        'createdAt': json['created_at'],
        'updatedAt': json['updated_at'],
        'publishedAt': !exists(json, 'published_at') ? undefined : json['published_at'],
        'images': ((json['images'] as Array<any>).map(ProductImageInputFromJSON)),
        'tags': json['tags'],
        'variants': ((json['variants'] as Array<any>).map(ProductVariantInputFromJSON)),
    };
}

export function ProductInputToJSON(value?: ProductInput | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'title': value.title,
        'handle': value.handle,
        'vendor': value.vendor,
        'product_type': value.productType,
        'status': ProductStatusInputToJSON(value.status),
        'created_at': value.createdAt,
        'updated_at': value.updatedAt,
        'published_at': value.publishedAt,
        'images': ((value.images as Array<any>).map(ProductImageInputToJSON)),
        'tags': value.tags,
        'variants': ((value.variants as Array<any>).map(ProductVariantInputToJSON)),
    };
}

