/* tslint:disable */
/* eslint-disable */
/**
 * fit-shopify-data API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CancelReasonOutput } from './CancelReasonOutput';
import {
    CancelReasonOutputFromJSON,
    CancelReasonOutputFromJSONTyped,
    CancelReasonOutputToJSON,
} from './CancelReasonOutput';
import type { FinancialStatusOutput } from './FinancialStatusOutput';
import {
    FinancialStatusOutputFromJSON,
    FinancialStatusOutputFromJSONTyped,
    FinancialStatusOutputToJSON,
} from './FinancialStatusOutput';
import type { FulfillmentStatusOutput } from './FulfillmentStatusOutput';
import {
    FulfillmentStatusOutputFromJSON,
    FulfillmentStatusOutputFromJSONTyped,
    FulfillmentStatusOutputToJSON,
} from './FulfillmentStatusOutput';
import type { OrderLineOutput } from './OrderLineOutput';
import {
    OrderLineOutputFromJSON,
    OrderLineOutputFromJSONTyped,
    OrderLineOutputToJSON,
} from './OrderLineOutput';

/**
 * 
 * @export
 * @interface OrderOutput
 */
export interface OrderOutput {
    /**
     * 
     * @type {number}
     * @memberof OrderOutput
     */
    shopifyId: number;
    /**
     * 
     * @type {number}
     * @memberof OrderOutput
     */
    number: number;
    /**
     * 
     * @type {string}
     * @memberof OrderOutput
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof OrderOutput
     */
    customerId?: number | null;
    /**
     * 
     * @type {CancelReasonOutput}
     * @memberof OrderOutput
     */
    cancelReason: CancelReasonOutput;
    /**
     * 
     * @type {FinancialStatusOutput}
     * @memberof OrderOutput
     */
    financialStatus: FinancialStatusOutput;
    /**
     * 
     * @type {FulfillmentStatusOutput}
     * @memberof OrderOutput
     */
    fulfillmentStatus: FulfillmentStatusOutput;
    /**
     * 
     * @type {number}
     * @memberof OrderOutput
     */
    subtotalPrice: number;
    /**
     * 
     * @type {number}
     * @memberof OrderOutput
     */
    totalDiscount: number;
    /**
     * 
     * @type {number}
     * @memberof OrderOutput
     */
    totalTax: number;
    /**
     * 
     * @type {number}
     * @memberof OrderOutput
     */
    totalShippingPrice: number;
    /**
     * 
     * @type {number}
     * @memberof OrderOutput
     */
    totalPrice: number;
    /**
     * 
     * @type {number}
     * @memberof OrderOutput
     */
    weight?: number | null;
    /**
     * 
     * @type {Date}
     * @memberof OrderOutput
     */
    createdAt: Date;
    /**
     * 
     * @type {Array<OrderLineOutput>}
     * @memberof OrderOutput
     */
    lineItems: Array<OrderLineOutput>;
}

/**
 * Check if a given object implements the OrderOutput interface.
 */
export function instanceOfOrderOutput(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "shopifyId" in value;
    isInstance = isInstance && "number" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "cancelReason" in value;
    isInstance = isInstance && "financialStatus" in value;
    isInstance = isInstance && "fulfillmentStatus" in value;
    isInstance = isInstance && "subtotalPrice" in value;
    isInstance = isInstance && "totalDiscount" in value;
    isInstance = isInstance && "totalTax" in value;
    isInstance = isInstance && "totalShippingPrice" in value;
    isInstance = isInstance && "totalPrice" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "lineItems" in value;

    return isInstance;
}

export function OrderOutputFromJSON(json: any): OrderOutput {
    return OrderOutputFromJSONTyped(json, false);
}

export function OrderOutputFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderOutput {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'shopifyId': json['shopify_id'],
        'number': json['number'],
        'name': json['name'],
        'customerId': !exists(json, 'customer_id') ? undefined : json['customer_id'],
        'cancelReason': CancelReasonOutputFromJSON(json['cancel_reason']),
        'financialStatus': FinancialStatusOutputFromJSON(json['financial_status']),
        'fulfillmentStatus': FulfillmentStatusOutputFromJSON(json['fulfillment_status']),
        'subtotalPrice': json['subtotal_price'],
        'totalDiscount': json['total_discount'],
        'totalTax': json['total_tax'],
        'totalShippingPrice': json['total_shipping_price'],
        'totalPrice': json['total_price'],
        'weight': !exists(json, 'weight') ? undefined : json['weight'],
        'createdAt': json['created_at'],
        'lineItems': ((json['line_items'] as Array<any>).map(OrderLineOutputFromJSON)),
    };
}

export function OrderOutputToJSON(value?: OrderOutput | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'shopify_id': value.shopifyId,
        'number': value.number,
        'name': value.name,
        'customer_id': value.customerId,
        'cancel_reason': CancelReasonOutputToJSON(value.cancelReason),
        'financial_status': FinancialStatusOutputToJSON(value.financialStatus),
        'fulfillment_status': FulfillmentStatusOutputToJSON(value.fulfillmentStatus),
        'subtotal_price': value.subtotalPrice,
        'total_discount': value.totalDiscount,
        'total_tax': value.totalTax,
        'total_shipping_price': value.totalShippingPrice,
        'total_price': value.totalPrice,
        'weight': value.weight,
        'created_at': value.createdAt,
        'line_items': ((value.lineItems as Array<any>).map(OrderLineOutputToJSON)),
    };
}

