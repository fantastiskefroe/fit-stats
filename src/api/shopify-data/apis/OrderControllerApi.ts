/* tslint:disable */
/* eslint-disable */
/**
 * fit-shopify-data API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  FulfillmentStatus,
  OrderOutput,
} from '../models';
import {
    FulfillmentStatusFromJSON,
    FulfillmentStatusToJSON,
    OrderOutputFromJSON,
    OrderOutputToJSON,
} from '../models';

export interface GetOrdersRequest {
    from: Date;
    to: Date;
    xFitToken?: string | null;
    fulfillmentStatus?: FulfillmentStatus;
}

/**
 * 
 */
export class OrderControllerApi extends runtime.BaseAPI {

    /**
     */
    async getOrdersRaw(requestParameters: GetOrdersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<OrderOutput>>> {
        if (requestParameters.from === null || requestParameters.from === undefined) {
            throw new runtime.RequiredError('from','Required parameter requestParameters.from was null or undefined when calling getOrders.');
        }

        if (requestParameters.to === null || requestParameters.to === undefined) {
            throw new runtime.RequiredError('to','Required parameter requestParameters.to was null or undefined when calling getOrders.');
        }

        const queryParameters: any = {};

        if (requestParameters.from !== undefined) {
            queryParameters['from'] = (requestParameters.from as any).toISOString();
        }

        if (requestParameters.fulfillmentStatus !== undefined) {
            queryParameters['fulfillmentStatus'] = requestParameters.fulfillmentStatus;
        }

        if (requestParameters.to !== undefined) {
            queryParameters['to'] = (requestParameters.to as any).toISOString();
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.xFitToken !== undefined && requestParameters.xFitToken !== null) {
            headerParameters['x-fit-token'] = String(requestParameters.xFitToken);
        }

        const response = await this.request({
            path: `/orders`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(OrderOutputFromJSON));
    }

    /**
     */
    async getOrders(requestParameters: GetOrdersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<OrderOutput>> {
        const response = await this.getOrdersRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
